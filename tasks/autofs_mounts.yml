---
- name: AUTOFS MOUNT | Include OS-specific variables.
  include_vars: "{{item}}"
  with_first_found:
    - "{{ ansible_distribution }}_{{ ansible_distribution_version | replace('.','_') }}.yml"
    - "{{ ansible_distribution }}_{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}_{{ ansible_distribution_version | replace('.','_') }}.yml"
    - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"
    - default.yml

- name: AUTOFS MOUNT | Set facts for autofs_automount
  set_fact:
    autofs_mounts_manage_service: "{{ false if ansible_virtualization_type is defined and ansible_virtualization_type == 'docker' else true }}"
    autofs_mounts_allow_reload: "{{ false if ansible_virtualization_type is defined and ansible_virtualization_type == 'docker' else true }}"

- name: AUTOFS MOUNT | Assert that OS is supported
  assert:
    that: autofs_automount_os_supported == true

#
# Install packages
#
- name: AUTOFS MOUNT | Install needed packages
  package:
    name: "{{ item }}"
    state: installed
  with_items: "{{ autofs_mount_packages }}"

- name: AUTOFS MOUNT | Enable Autofs and dependencies
  service:
    name: "{{item}}"
    state: started
    enabled: yes
  with_items:
    - autofs

# tasks for mounts, v2

- name: Create auto.master and add map-files
  template:
    src: auto.master.j2
    dest: /etc/auto.master
  notify:
    - Reload autofs
- name: Create map-files
  template:
    src: auto.mount.j2
    dest: "/etc/auto.{{item.key}}"
  with_dict: "{{ autofs_maps }}"
  notify:
    - Reload autofs
